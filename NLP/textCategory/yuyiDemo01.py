# -*- coding:utf-8 -*-

import difflib
# import Levenshtein
import jieba
import jieba.analyse
import jieba.posseg

'''
	通过文本相似度判断语义
	方法1：difflib，计算相似度；
	方法2：海明距离，计算相似度；（pass，原因：海明距离要求计算的两段文本length相同）
	方法3：aiml，基于正则匹配；（pass，原因：真实问答中零碎词太多，如呢、了、啊、这这这、等等）
'''


str1 = "去虎门的高铁在哪"    # 意图：去虎门，坐高铁，==> 目的是坐车，应该去三楼，，回答：指引去三楼
# str2 = "{贵州遵义}的{高铁}在哪{上三楼}"

zuoche = ["{cityname}的{高铁}是在这边{坐车}吗",
    	  "我从{cityname}过来南站{换乘}在哪换乘",
          "我从{cityname}过来转车该怎么{上三楼}",
          "{cityname}的{高铁}在哪{上三楼}",
	      "要去/到哪里{坐车}",
	      "不好意思，我想问一下{这是}在哪{坐车}",
	      "{城轨}也是在这{坐车}吧",
	      "他这个{坐车}从哪里上去啊",
	      "我去{cityname}那边，我到哪里去{坐车}啊",
	      "我这怎么{坐车}啊？{这个}",
	      "要怎么{坐车}",
	      "{高铁}往哪个方向",
	      "{进站}{进高铁站}去{cityname}都在哪边啊",
	      "从哪上{高铁}",
	      "我想问一下去{坐高铁}从哪个进口进去的",
	      "这边是有到{cityname}的吗",
	      "问一下哪里{上3楼}",
	      "问一下哪里能到{3层}",
	      "那你好，问一下{这个}是直接{上3楼}吗？在这里可以上吗",
	      "怎么上去{3楼/3层}",
	      "{a区}怎么走啊",
	      "{b区}在哪里啊",
	      "{c区}在哪里啊",
	      "{d区}在哪里啊",
	      "就哪{进站}呢",
	      "{进站}进高铁站去{cityname}都在哪边啊",
	      "这个路那个{进站口}在哪里",
	      "哪里是{进站口}啊",
	      "那个{进站口}是在哪里啊",
	      "那{进站口}怎么{进去}啊",
	      "你好，请问一下这个从哪里{进站}的",
	      "请问一下那个我们要去{候车室}{进站口}往哪里走",
	      "如果{进站}的话是从{正门}进吗",
	      "{进站}地点在哪里",
	      "{3层}怎么上去"
	    ]

jieren = ["虎门的高铁在哪个到达口"]

# 1. 先分词





# 2. difflib，相似度计算




for s in zuoche:
    seq = difflib.SequenceMatcher(None, str1, s)
    ratio = seq.ratio()
    print("相似度：", ratio)

for s in jieren:
    seq = difflib.SequenceMatcher(None, str1, s)
    ratio = seq.ratio()
    print("相似度：", ratio)

# 后果：乘客意图是进站，给人指引到到达口了
